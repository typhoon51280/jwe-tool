# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    tags:
      - 'v*'
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        system:
          - darwin
          - windows
          - linux
        arch:
         - amd64
        include:
          - system: windows
            os: windows-latest
            vendor: ""
            abi: ""
            artifact_name: jwe-tool
            artifact_extension: .exe
            archive_type: zip
            archive_extension: .zip
          - system: darwin
            os: macos-latest
            vendor: ""
            abi: ""
            artifact_name: jwe-tool
            artifact_extension: ""
            archive_type: tar
            archive_extension: .tar.gz
          - system: linux
            os: ubuntu-latest
            vendor: unknown
            abi: ""
            artifact_name: jwe-tool
            artifact_extension: ""
            archive_type: tar
            archive_extension: .tar.gz
        exclude:
          - system: darwin
            arch: "386"
          - system: linux
            arch: "386"

    runs-on: ${{ matrix.os }}
    
#     env:
#       CARGO_TERM_COLOR: always
#       CARGO_BUILD_TARGET: ${{matrix.arch}}-${{matrix.vendor}}-${{matrix.system}}${{matrix.abi}}
#       RUSTFLAGS: ${{matrix.rustflags}}

    steps:

    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      id: build
      run: |
        go build -v ./...
        echo "name=archive_name::${{matrix.artifact_name}}-${{matrix.system}}${{matrix.arch}}${{matrix.vendor}}${{matrix.abi}}" >> $GITHUB_OUTPUT
        echo "name=archive_file::${{matrix.artifact_name}}-${{matrix.system}}${{matrix.arch}}${{matrix.vendor}}${{matrix.abi}}${{matrix.archive_extension}}" >> $GITHUB_OUTPUT
        echo "name=archive_dir::." >> $GITHUB_OUTPUT

    - name: Test
      run: go test -v ./...
      
    - name: Compress Artifact
      uses: thedoctor0/zip-release@master
      with:
        type: ${{matrix.archive_type}}
        directory: ${{steps.build.outputs.archive_dir}}
        filename: ${{steps.build.outputs.archive_file}}
        path: ${{matrix.artifact_name}}${{matrix.artifact_extension}}

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{steps.build.outputs.archive_name}}
        path: ${{steps.build.outputs.archive_dir}}/${{steps.build.outputs.archive_file}}     

  release:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ~/artifacts
      - name: Publish Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ~/artifacts/**/*.zip,~/artifacts/**/*.tar.gz
          allowUpdates: true
          generateReleaseNotes: true
          replacesArtifacts: true
          removeArtifacts: true
          prerelease: false
          draft: false
          token: ${{ secrets.GITHUB_TOKEN }}
